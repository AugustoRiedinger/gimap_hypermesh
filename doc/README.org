#+TITLE: How To Hypermesh
#+AUTHOR: A. Riedinger
#+STARTUP: folded

* Case: Permeable with Ferro and Boundary Layers

** Table of contents :toc:
- [[#case-permeable-with-ferro-and-boundary-layers][Case: Permeable with Ferro and Boundary Layers]]
  - [[#about][About]]
  - [[#creating-the-base-model][Creating the base model]]
  - [[#importing-the-base-model][Importing the base model]]
  - [[#how-to-move-in-hypermesh][How to move in Hypermesh]]
  - [[#deleting-lines][Deleting lines]]
  - [[#creating-the-main-surface][Creating the main surface]]
  - [[#adjusting-the-tolerance][Adjusting the tolerance]]
  - [[#trimming-the-lines][Trimming the lines]]
  - [[#meshing-with-automesh][Meshing with automesh]]
  - [[#creating-a-collector-for-the-volume][Creating a collector for the volume]]
  - [[#drag---creating-the-3d-model][Drag - Creating the 3D model]]
  - [[#creating-the-faces-of-the-volume][Creating the faces of the volume]]
  - [[#exporting-as-an-openfoam-case][Exporting as an OpenFOAM case]]

** About
The sole objective of this case is to create the boundary layers of a continous and orthogonal mesh surrounding the magnet and ferro. The configuration is as follows:

#+CAPTION:Configuration of the Magnet-Ferro test case
#+LABEL:fig:magnet-ferroConfiguration
[[file:../images/magnet-ferroConfiguration.png]]
** Creating the base model
The base model (lines) were created with the CAD tool OnShape:

#+CAPTION:Magnet-ferro OnShape base model
#+LABEL:fig:magnet-ferroOnShape
[[file:../images/magnet-ferroOnShape.png]]

The main advantage of using this tool instead of Hypermesh is that the lines can be defined as a function of some variables. This is, for example, the size of the magnet has been defined in such a way that if we would like to change it, the boundary lines and the ferro would change accordingly mantaining the configuration.

** Importing the base model
To import the base model to Hypermesh, you will need to first export it from OnShape. In order to just export the *lines*, you will have to export the *Sketch part*. This is, right click on the sketch (the pencil symbol; in my case =Top [Sketch]=) and then go to =Export as DXF/DWG ...=. You will then see a window as follows; we will need to export the model as a =DXF= file for Hypermesh to be able to read it.

#+CAPTION:Exporting the model from OnShape
#+LABEL:fig:exportingOnShape
[[file:../images/exportingOnShape.png]]

Now, in Hypermesh go to =File -> Import -> Geometry=. You will see this window in the left side:

#+CAPTION:Importing to Hypermesh
#+LABEL:fig:importingHypermesh
[[file:../images/importingHypermesh.png]]

Then, with the folder symbol search for the =.dxf= file and then click in =Import= on the bottom left side.
** How to move in Hypermesh
In order to affect the view you will have to always mantain the button =Ctrl= pressed in your keyboard.

 + =Ctrl + Mouse Middle Button= resets the view.
 + =Ctrl + Mouse Wheel=: zoom in, zoom out.
 + =Ctrl + Drag Mouse Middle Button=: mark an area to make zoom.
 + =Ctrl + Mouse Left Button=: rotate on a defined point.
 + =Ctrl + Mouse Right Button=: move.

** Deleting lines
The base model has extra lines used to define parameters for variables. They can be easily deleted pressing the =F2= key or the "/X/" symbol on the bottom panel (seventh symbol counting from the left). You will see the following screen:

#+CAPTION:Delete panel for deleting lines
#+LABEL:fig:deletingLines
[[file:../images/deletingLines.png]]

With the downward facing arrow to the left select =lines= instead of the default =elems=. Now, you can click on the lines you want to delete (marked on white):

#+CAPTION:Selecting the lines to delete
#+LABEL:fig:deletingLines2
[[file:../images/deletingLines2.png]]

After marking all the lines to delete, click on the =delete entity= button on the bottom right of the panel. The lines will then be deleted, and you can press =Esc= or the button =return= to go back to the main panel.
**
** Creating the main surface
On the main panel, look to right side and click on =2D=. Then, click the button =spline=. You should see the following panel:

#+CAPTION:Spline panel
#+LABEL:fig:spline
[[file:../images/spline.png]]

Now, press the downwards facing arrow and change the default =mesh, keep surf= option to =surface only= on the panel. You can now select the exterior lines of the surface:

#+CAPTION:Selecting the exterior lines to create the surface
#+LABEL:fig:splineExteriorLines
[[file:../images/splineExteriorLines.png]]

You can now press the button =create= and the surface will be created. In order to renderize it you will have to press the =Shaded Geometry and Surface Edges= button on the top side of the panel (12th counting from the left):

#+CAPTION:Renderized Surface
#+LABEL:fig:splineRenderizedSurface
[[file:../images/splineRenderizedSurface.png]]

Press =Esc= or =return= to go back to the main panel.
** Adjusting the tolerance
This step is necessary in order to create tinier elements. Press the key =o= and you will be redirected to the following panel:

#+CAPTION:Tolerance Geometry
#+LABEL:fig:toleranceGeometry
[[file:../images/toleranceGeometry.png]]

Here, change the value of =cleanup tol= to =1e-7=. Then, press the =mesh= button on the left side:

#+CAPTION:Tolerance Mehs
#+LABEL:fig:toleranceMesh
[[file:../images/toleranceMesh.png]]

We should change the =element size= to =1e-5= and the =node tol= to 1e-6. We can now press =Esc= and go back to the main panel.
** Trimming the lines
We should now trim the lines to create the different surfaces. For this, press =Geom= on the right side of the main panel, and then go to =surface edit=. You should see a panel similar to this:

#+CAPTION:Surface Edit
#+LABEL:fig:surfaceEdit
[[file:../images/surfaceEdit.png]]

Here, in the second column (middel), press the downward facing arrow and change the default =free lines= to just =lines=. Just below that, press the scroll button and change the default =along a vector= to =normal to the surface=. You should now have a panel that looks the same as the figure above.

The procedure to trim the lines is as follows:

  1. Press the =surfs= button on the first column (to the left) and select the main surface. It should now appear in white.

#+CAPTION:Surface Edit Select Surface
#+LABEL:fig:surfaceEditSelectSurface
[[file:../images/surfaceEditSelectSurface.png]]

 2. Press the =line= button on the mid column, and the press it again to select =displayed= and mar                                                                                                                                                                        k all the lines to trim.

#+CAPTION:Surface Edit Select Lines
#+LABEL:fig:surfaceEditSelectLines
[[file:../images/surfaceEditSelectLines.png]]

 3. Now we can press =trim= on the right side and the surface will be trimmed.

#+CAPTION:Surface Edit Trim
#+LABEL:fig:surfaceEditTrim
[[file:../images/surfaceEditTrim.png]]
** Meshing with automesh
In the main panel, press the =2D= button on the right side and then =automesh=. You should see a panel similar to this:

#+CAPTION:automesh
#+LABEL:fig:automesh
[[file:../images/automesh.png]]

Then, change the default =mixed= to =quad only= and the =element size= to =0.01=. Now, you can press the =surfs= button on the left, and start picking every surface except the boundary layers. The end result should look like this (selected surfaces marked in white):

#+CAPTION:automesh3
#+LABEL:fig:automesh3
[[file:../images/automesh3.png]]

We can now press the =mesh= button on the right side and we should see a meshing like this:

#+CAPTION:automesh4
#+LABEL:fig:automesh4
[[file:../images/automesh4.png]]

Now we press the button =return=, and we can start selecting the boundary layers. It should look like this:

#+CAPTION:automesh5
#+LABEL:fig:automesh5
[[file:../images/automesh5.png]]

Now we shall change the tolerance or =element size= to 0.001 and press the button =mesh=. The end result should look like this:

#+CAPTION:automesh6
#+LABEL:fig:automesh6
[[file:../images/automesh6.png]]

#+CAPTION:automesh7
#+LABEL:fig:automesh7
[[file:../images/automesh7.png]]
** Creating a collector for the volume
We shall now create a collector for the volume in order to stack all the elements of the 3D model. For this, press the =Components= icon on the top side of the main panel (second icon counting from the left):

#+CAPTION:mainSurface
#+LABEL:fig:mainSurface
[[file:../images/volume.png]]

Create a name for the new component in =component name= and select a color. In this case, we named the new collector =volume=. We shall then press the =create= button an return to the main panel.

** Drag - Creating the 3D model
In the main panel - 2D section, press the =drag= button. You *need to be in the =volume= collector we just created*. The steps to follow now are:

 + On the left side of the panel, press =drag elems= instead of =drag geom=.
 + Select =2d elems= and then select =all=.
 + Check that =elems to current comp= is selected in order to move all the elements to the =volume= collector.
 + Change =N1, N2, N3= to =z-axis=.
 + Change the =distance= to =1.0= and =on drag= also to =1=.

The options should look like this:

#+CAPTION:drag1
#+LABEL:fig:drag1
[[file:../images/drag1.png]]

We can now press the =drag+= button and the end result should look like this:

#+CAPTION:drag2
#+LABEL:fig:drag2
[[file:../images/drag3.png]]

Note that the model is now blue. This is because we sent all the elements in the drag to the =volume= collector.
** Creating the faces of the volume
We shall now define the different faces of the volume. This step is necessary in order to assign boundary conditions in OpenFOAM to different patches.

Go to the =Tool= panel and click on =faces=. You should see the following menu:

#+CAPTION:faces1
#+LABEL:fig:faces1
[[file:../images/faces1.png]]

Press =comp= on the left side, and select the =volume= collector:

#+CAPTION:faces3
#+LABEL:fig:faces3
[[file:../images/faces3.png]]

Now, press =select= on the right side. It will redirect you to the previous menu, where you can press =find faces=. You should note that the model changed color.

Pressing the letter =d= on you keyboard, you can access the display menu, where you can see that a new collector =faces^= has been automatically created. Here, unselect the =volume= collector. For the following part, you should have displayed only the =faces^= collector:

#+CAPTION:faces4
#+LABEL:fig:faces4
[[file:../images/faces4.png]]

We shall now create collector for the different patches. The procedure is the same as we did with the =volume= collector: press the =Components= button, and then change the name and colour for the six faces. We will call them =top=, =bottom=, =right=, =left=, =front= and =back=, as per OpenFOAM nomenclature. Pressing =d= we can check if they were created correctly:

#+CAPTION:faces5
#+LABEL:fig:faces5
[[file:../images/faces5.png]]

We can now start assigning the actual faces to the different components. For this, in the =Tool= panel, go to =organize=. You should see the following menu:

#+CAPTION:faces6
#+LABEL:fig:faces6
[[file:../images/faces6.png]]

Now, we will select the elements =by face=. For this, you must pick two random elements in some face:

#+CAPTION:faces7
#+LABEL:fig:faces7
[[file:../images/faces7.png]]

In the panel, press the =elems= button, and then select the option =by face=. You should see that just one face has been selected with this method:

#+CAPTION:faces8
#+LABEL:fig:faces8
[[file:../images/faces8.png]]

In destination component, select one of the patches (=front=, for example), and then select =move=. You should see that the selected face has now the colour of the respective collector:

#+CAPTION:faces0
#+LABEL:fig:faces9
[[file:../images/faces9.png]]

You shall repeat the same method for all faces:

#+CAPTION:faces10
#+LABEL:fig:faces10
[[file:../images/faces10.png]]
** Exporting as an OpenFOAM case
We will now export the geometry as an OpenFOAM case. Go to =File -> Export -> Solver deck=, you should see the following menu on the left:

#+CAPTION:export1
#+LABEL:fig:export1
[[file:../images/export1.png]]

Leave the =File type= as =CFD=, and change the =Solver type= from =Fluent= to =OpenFOAM=. Below that, in =File=, you can select a folder to export the geometry:

#+CAPTION:export2
#+LABEL:fig:export2
[[file:../images/export2.png]]

Now, press the letter =d= in the keyboard to go to the =display= menu. Here, you must select the =volume= collector, and unselect the =faces^= collector:

#+CAPTION:export3
#+LABEL:fig:export3
[[file:../images/export3.png]]

You can now press the =Export= button on the export menu. A message indicating that the OpenFOAM case was succesfully created should appear.

In order to verify that the geometry was exported correctly, open a terminal and go to the directory where the case was exported. To open the case with Paraview, create a dummy file as =touch foam.foam=, and then open the file as =paraview foam.foam &=. You should see the mesh and geometry:

#+CAPTION:export4
#+LABEL:fig:export4
[[file:../images/export4.png]]

You should also check that the patchs have been correctly created:

#+CAPTION:export5
#+LABEL:fig:export5
[[file:../images/export5.png]]
